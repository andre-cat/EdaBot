from telegram import ext
import t_bot.constants as constants

#iniciando bot
print('Iniciando bot....')

#comando de arranque
def start_command(update, context):
    update.message.reply_text('¡Hola! ¿En qué puedo ayudarte?')

def help_command(update, context):
    update.message.reply_text('Try typing anything and i will respond!')

def custom_command(update, context):
    update.message.reply_text('This is a custom command!')


def handle_response(text: str) -> str:
    if 'hello' in text:
        return 'Hey there!'

    if 'how are you' in text:
        return 'I am good, thanks!'

    return 'Idk'

def handle_message(update, context):
    message_type = update.message.chat.type
    text = str(update.message.text).lower()
    response = ''

    print(f'User ({update.message.chat.id}) says: "{text} in: {message_type}"')
    if message_type == 'group':
        if '@Loquendobot' in text:
            new_text = text.replace('@chesperitobot', '').strip()
            response = handle_response(new_text)
    else:
        response = handle_response(text)

    update.message.reply_text(response)


def error(update, context):
    print(f'Update {update} caused error: {context.error}')

def run():
    updater = ext.Updater(constants.token, use_context=True)
    dp = updater.dispatcher

    #comandos
    dp.add_handler(ext.CommandHandler('start', start_command))
    dp.add_handler(ext.CommandHandler('help', help_command))
    dp.add_handler(ext.CommandHandler('custom', custom_command))

    #Mensajes
    dp.add_handler(ext.MessageHandler(ext.Filters.text, handle_message))

    #Errors
    dp.add_error_handler(error)

    #Ejecutar el bot
    updater.start_polling(1.0)
    updater.idle()